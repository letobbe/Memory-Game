function renderGameBricks(){var e=controller.readLevel(),r=model.gameBricksColumns*model.gameBricksRows;if(e>r){var o=Math.floor(4*Math.random())+1;document.getElementsByTagName("body")[0].className="background-"+o,controller.updateLives(1),model.gameBricksColumns++,model.gameBricksRows++,r=model.gameBricksColumns*model.gameBricksRows}var t=document.getElementById("gameboard");firstBrickCount=0;for(var i=[];firstBrickCount<=r-e-1;)i[firstBrickCount++]=0;for(;0<e;)i[firstBrickCount++]=e--;for(i=i.shuffle(),t.removeAttribute("class"),t.className+="gameboard-col-"+model.gameBricksColumns;t.hasChildNodes();)t.removeChild(t.lastChild);for(;r>0;){var n=document.createElement("div"),l=i[r-1];if(n.className="gamebrick",n.dataset.number=l,0!=l)var c=l;else var c="";n.innerHTML="<div>"+c+"</div>",t.insertBefore(n,t.firstChild),r--}document.getElementById("timer").className+="timerStart",setTimeout(gameStart,3500)}function gameStart(){brickClickCounter=1,detectClicks(),document.getElementById("timer").removeAttribute("class"),document.getElementById("gameboard").className+=" gameStarted";var e=document.getElementsByClassName("gamebrick")}function detectClicks(){for(var e=document.getElementsByClassName("gamebrick"),r=0;r<e.length;r++)e[r].addEventListener("click",clickAction,!1)}function clickAction(){var e=this.getAttribute("data-number");this.getAttribute("data-number")==brickClickCounter?(this.className+=" correct",controller.updateScore(100),brickClickCounter==controller.readLevel()&&(controller.updateScore(500+50*controller.readLevel()),controller.updateLevel(),renderGameBricks()),brickClickCounter++):(0==this.getAttribute("data-number")||this.getAttribute("data-number")>brickClickCounter)&&(this.className+=" wrong",controller.updateScore(-100),controller.updateLives(-1))}var model={level:1,score:0,brickClickCounter:1,gameBricksColumns:2,gameBricksRows:2,lives:3},controller={init:function(){view.render()},readLevel:function(){return model.level},updateLevel:function(){model.level+=1,view.renderLevel()},readHighscore:function(){return"undefined"!=typeof Storage?localStorage.memoryHighscore?localStorage.memoryHighscore:0:void alert("Your browser dont support highscore")},updateHighscore:function(){"undefined"!=typeof Storage?localStorage.memoryHighscore?localStorage.memoryHighscore<score&&(localStorage.memoryHighscore=score):localStorage.memoryHighscore=score:alert("The highscore can not be saved")},readScore:function(){return model.score},updateScore:function(e){model.score+=e,view.renderInfo()},readLives:function(){return model.lives},updateLives:function(e){model.lives+=e,model.lives<=0?(alert("You lost the game"),this.reset()):view.renderInfo()},reset:function(){model.level=1,model.score=0,model.brickClickCounter=1,model.gameBricksColumns=2,model.gameBricksRows=2,model.lives=3,this.init()}},view={render:function(){this.renderLevel()},renderInfo:function(){this.showHighScore=document.getElementById("showHighScore"),this.showLevel=document.getElementById("showLevel"),this.showScore=document.getElementById("showScore"),this.showLives=document.getElementById("showLives"),this.showHighScore.innerHTML=controller.readHighscore(),this.showLevel.innerHTML=controller.readLevel(),this.showScore.innerHTML=controller.readScore(),this.showLives.innerHTML=controller.readLives()},renderLevel:function(){this.renderInfo(),renderGameBricks()}};Array.prototype.shuffle=function(){for(var e=this,r=e.length-1;r>=0;r--){var o=Math.floor(Math.random()*(r+1)),t=e[o];e[o]=e[r],e[r]=t}return e},window.onload=function(){controller.init()};